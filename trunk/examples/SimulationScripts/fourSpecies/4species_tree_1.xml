<!-- Generated with SimSnap -->
<!-- -->
<!-- input tree: (0[0.005015297580845918]:0.0775211,(1[0.002117776126320782]:0.0563256,(2[0.01251027712764953]:0.0047852,3[0.01955316478164915]:0.0047852)[0.0016331093062782987]:0.0515404)[0.01873700703657194]:0.0211955)[0.001993417543214784];-->
<snap version='2.0' namespace='snap:beast.util'>

<map name='snapprior'>snap.likelihood.SnAPPrior</map>
<map name='snaptreelikelihood'>snap.likelihood.SnAPTreeLikelihood</map>



	<!-- n = 1000 -->
	<data id='alignment' dataType='integerdata' statecount='6'>
		<sequence taxon='0' totalcount='5'>
5,5,5,5,0,0,0,5,5,2,5,0,5,3,5,5,0,0,0,5,0,5,0,5,5,5,0,5,5,5,1,5,5,0,0,5,5,0,0,5,5,5,5,0,0,5,0,5,5,0,0,5,0,5,0,0,5,0,5,5,0,0,0,0,5,0,5,0,0,5,0,5,0,5,5,5,5,0,0,5,5,0,0,5,5,5,0,0,0,0,5,5,5,0,5,5,0,5,5,0,0,0,1,5,0,5,5,1,5,5,0,0,0,5,5,0,5,0,1,0,0,5,5,0,0,5,0,5,5,5,0,3,5,0,5,0,5,0,4,5,5,3,0,5,5,4,5,0,0,0,5,0,0,0,0,0,5,5,0,0,5,0,5,0,5,0,5,0,5,0,0,5,5,5,0,5,5,5,0,0,0,5,5,5,5,5,5,0,5,0,5,5,0,5,5,2,0,5,0,0,5,0,0,0,0,5,0,0,0,0,0,5,0,0,0,0,5,5,0,5,0,5,0,5,0,5,0,0,0,4,0,0,0,5,0,0,5,5,0,0,0,0,0,5,5,0,5,0,0,5,0,5,0,5,0,5,5,5,5,0,5,5,5,5,4,5,0,5,0,5,5,5,4,5,0,0,0,0,5,5,0,0,0,0,0,5,5,0,5,5,0,0,0,5,0,5,5,0,0,0,5,0,4,0,5,0,5,5,0,0,4,0,0,5,4,0,0,0,5,5,5,0,0,1,5,0,0,5,5,0,0,0,0,5,5,0,0,5,0,1,5,5,5,0,5,5,3,5,0,5,5,0,5,0,0,4,0,5,0,5,4,0,5,3,0,0,5,5,0,5,0,5,0,5,5,5,5,5,0,0,5,5,5,0,0,0,0,5,0,0,0,0,0,0,5,0,0,0,0,5,0,5,5,0,5,0,0,0,5,0,5,0,0,0,0,5,0,0,0,0,5,0,5,0,5,5,0,5,5,5,5,5,5,0,0,5,0,5,5,5,0,0,5,0,0,5,5,5,1,0,0,0,0,5,5,5,0,5,0,5,0,5,0,5,0,5,5,5,0,5,5,5,0,0,0,5,0,0,0,5,0,0,5,5,0,0,5,0,0,0,0,1,5,0,5,5,0,5,5,5,0,5,0,0,5,5,5,5,4,5,5,5,5,5,0,0,5,0,0,0,0,5,0,0,5,0,0,0,5,5,0,5,0,5,0,0,0,5,5,0,0,5,4,5,0,5,5,5,0,5,0,5,5,0,0,0,0,0,5,5,0,0,0,0,5,5,5,5,5,0,5,0,5,0,5,0,0,5,0,5,5,0,5,0,5,0,0,0,0,0,5,0,0,0,0,0,0,0,4,0,5,0,2,5,0,0,0,0,5,0,5,5,5,5,5,0,0,0,0,0,0,0,5,0,0,5,5,5,0,5,0,1,0,0,5,0,5,0,5,5,0,5,5,0,0,0,5,0,0,0,0,5,0,5,0,5,0,0,5,0,5,0,5,0,5,5,5,5,0,0,0,0,0,1,5,0,0,5,5,0,5,0,2,5,5,0,0,0,0,0,5,2,5,0,5,1,5,5,0,5,5,0,0,5,5,0,5,5,5,0,0,0,4,5,0,0,0,0,0,0,0,0,5,0,5,0,5,0,5,0,0,5,0,5,5,5,5,5,0,0,5,5,0,5,5,5,5,0,5,5,0,0,5,5,0,5,5,0,5,5,5,5,5,5,0,5,0,5,0,1,0,0,0,5,5,5,0,5,0,5,0,4,5,4,1,0,0,5,0,0,0,5,5,5,2,5,4,5,5,0,5,5,0,0,5,0,0,0,5,0,5,0,5,5,5,5,5,0,0,5,0,5,5,5,5,5,0,0,5,0,0,0,0,0,5,5,5,0,5,5,0,5,0,5,5,0,0,5,5,0,0,0,5,0,0,5,5,5,4,0,5,5,0,5,5,5,0,1,5,0,0,0,5,5,5,5,0,0,5,0,5,0,0,0,5,0,0,0,5,5,0,0,0,5,0,0,0,5,5,0,3,5,2,0,0,0,5,5,0,0,5,0,5,5,5,5,5,5,0,0,0,0,5,0,5,5,5,0,5,0,0,0,5,5,5,0,0,0,5,0,0,5,0,0,5,5,0,0,0,5,5,1,5,0,5,5,0,5,5,0,5,5,5,5,0,5,0,5,5,0,0,0,0,0,0,0,0,5,0,5,0,0,5,5,5,0,0,5,5,5,0,0,0,5,5,5,0,0,0,5,
		</sequence>
		<sequence taxon='1' totalcount='5'>
4,5,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,0,0,0,5,0,5,5,0,5,0,0,5,5,5,0,0,5,0,5,0,0,5,3,0,0,0,5,5,0,0,5,5,5,5,5,0,0,0,5,0,0,0,0,0,5,5,0,5,0,5,5,0,5,0,0,0,5,5,5,0,5,5,0,5,0,0,0,0,0,0,5,0,5,5,0,5,5,5,0,5,0,0,5,0,5,0,0,0,0,0,0,0,0,5,5,5,5,0,5,0,5,0,5,3,0,0,5,5,0,5,0,0,5,0,0,0,5,0,0,5,0,0,0,5,5,5,0,5,5,5,5,5,0,5,5,5,5,0,5,0,0,0,0,5,5,5,0,0,5,0,0,5,0,5,0,0,0,5,5,0,5,0,5,5,5,0,5,0,5,1,0,0,0,0,5,5,5,5,5,5,5,5,0,5,0,0,5,0,0,5,5,5,0,0,0,0,5,5,5,5,5,0,0,5,5,5,5,5,0,5,5,0,5,0,0,5,0,5,0,0,5,0,0,5,5,5,0,0,0,0,5,5,5,5,0,0,5,0,0,0,5,0,5,0,5,0,0,5,5,5,0,5,0,5,0,5,0,5,5,5,5,0,5,0,5,5,5,0,0,0,0,0,5,5,5,0,5,0,0,0,5,0,2,0,0,5,5,0,5,0,5,5,5,5,1,5,0,0,5,5,0,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,5,0,5,0,5,0,0,0,5,5,0,0,0,0,0,0,5,0,0,5,5,5,5,5,0,5,0,5,0,5,5,0,5,5,5,5,5,5,5,5,5,5,0,0,5,5,0,5,0,5,1,0,5,5,0,2,0,4,0,0,5,5,5,0,5,0,0,0,5,5,0,5,5,5,0,0,0,0,5,5,5,0,5,0,5,1,5,5,5,0,0,0,0,2,5,0,5,0,0,0,0,5,5,5,0,0,0,0,0,0,5,5,5,0,0,0,5,5,0,5,5,5,0,0,0,0,0,0,5,0,0,5,5,5,5,5,5,0,0,5,0,5,0,5,5,0,5,0,0,0,0,0,5,5,0,0,5,0,0,5,0,5,5,5,0,0,5,0,5,0,5,5,0,0,0,0,5,5,5,0,0,0,5,0,5,0,5,0,5,5,0,5,5,0,5,5,0,5,0,5,5,0,0,5,1,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,5,0,5,0,5,0,5,5,5,5,0,5,5,0,5,2,5,0,0,5,0,0,5,0,0,0,0,0,0,5,0,0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,0,0,0,5,5,0,0,0,0,5,0,5,0,0,5,5,0,5,0,0,5,5,5,5,0,0,5,5,0,5,5,5,0,0,0,5,2,0,0,5,5,0,5,5,5,0,5,0,0,0,5,5,5,0,0,5,0,5,0,5,0,0,0,0,0,0,5,5,0,0,0,5,0,0,5,0,5,5,0,0,0,5,5,5,0,0,5,0,5,0,0,5,0,0,0,0,0,5,5,5,5,5,5,0,5,0,5,5,0,0,0,0,0,5,0,0,5,0,0,0,0,5,5,5,0,5,5,0,0,0,5,5,0,5,0,4,5,0,5,0,5,0,0,0,0,5,5,5,0,5,5,0,5,0,5,5,0,0,5,5,5,5,5,5,0,5,0,5,0,5,5,5,5,5,5,5,5,0,0,5,0,5,0,0,5,0,5,5,5,5,4,5,5,0,0,0,5,0,0,0,5,5,5,5,5,5,5,5,5,0,0,0,0,0,5,0,0,5,0,0,0,1,0,0,5,5,5,0,0,0,0,0,0,0,5,5,5,0,5,0,0,0,4,5,1,0,0,0,5,0,5,5,0,5,0,5,5,5,0,5,5,0,5,0,0,0,0,0,5,5,5,0,5,5,5,0,0,0,0,5,5,0,0,1,5,5,0,0,0,0,0,0,0,0,5,5,0,0,5,0,0,0,0,0,0,0,5,0,0,0,5,5,5,0,0,0,5,1,0,0,0,5,5,0,0,0,0,5,5,0,0,5,5,5,5,0,0,0,0,5,5,5,5,0,5,5,0,0,2,5,5,5,5,5,5,5,0,0,0,0,5,0,0,0,5,0,5,5,5,0,5,5,5,5,
		</sequence>
		<sequence taxon='2' totalcount='5'>
5,0,0,0,1,0,5,5,0,0,0,5,0,0,5,0,0,5,2,0,5,0,5,0,5,0,5,0,0,0,5,0,5,5,5,0,5,5,0,5,0,0,5,5,0,5,5,0,0,0,0,0,4,0,0,0,5,5,5,0,0,5,3,5,0,5,0,5,1,0,5,5,5,4,5,4,0,0,5,5,4,5,5,0,0,0,5,5,1,5,0,5,0,0,0,5,5,0,0,0,0,5,5,0,2,0,0,5,5,0,5,5,5,4,5,5,5,0,0,5,0,0,0,5,0,5,0,0,1,0,5,0,0,5,0,5,4,5,0,0,0,5,5,0,0,5,0,0,5,5,5,5,5,5,5,5,0,4,0,5,0,5,2,0,5,0,0,0,5,5,0,5,5,0,0,0,0,0,5,0,5,3,5,0,5,5,5,5,5,5,5,0,5,4,5,5,5,5,0,5,0,5,5,5,5,5,5,0,0,5,1,0,5,0,0,5,5,5,0,0,5,0,0,0,5,0,5,0,5,5,2,0,5,5,5,0,0,0,0,0,5,0,5,0,0,5,0,0,5,0,0,5,5,5,2,0,5,4,0,0,0,0,0,5,0,0,5,0,5,0,5,0,5,0,0,5,5,5,0,5,5,5,0,4,0,0,0,5,5,0,0,0,0,0,0,5,5,5,0,0,5,0,4,5,0,5,5,5,0,5,5,0,5,0,0,5,5,0,4,4,0,5,0,5,0,0,0,0,0,0,0,5,5,0,0,5,5,5,5,0,0,5,5,2,5,5,0,5,5,5,5,1,0,5,5,0,0,3,5,0,5,5,5,0,5,0,0,5,5,0,5,0,5,0,5,0,0,0,5,5,5,0,0,0,5,0,0,5,5,0,0,0,0,0,0,0,0,5,2,0,5,0,0,5,5,5,0,5,0,0,0,0,1,0,1,5,0,0,5,5,5,5,5,5,4,0,5,0,0,5,0,5,5,0,5,5,5,0,5,5,0,0,5,5,5,5,0,0,0,0,0,2,5,5,0,0,0,0,5,3,5,0,5,0,5,5,3,0,0,5,5,5,5,0,5,4,0,5,5,5,0,0,5,5,5,5,5,0,0,0,5,0,0,1,0,0,5,0,0,0,0,5,5,1,0,0,5,0,5,5,0,5,0,5,5,5,0,5,5,5,0,0,0,5,5,5,5,5,5,0,0,5,5,4,5,1,0,5,4,5,5,5,5,0,4,0,5,5,5,0,5,0,0,0,0,0,0,5,5,0,0,5,5,5,5,5,5,0,5,4,0,5,5,1,0,5,0,5,5,4,0,5,5,0,4,0,5,5,1,1,0,5,5,0,0,0,5,0,5,0,5,5,0,5,5,5,5,0,0,1,5,5,0,0,0,5,0,0,1,5,0,5,5,5,5,0,0,5,5,5,0,0,5,5,0,5,5,0,0,5,0,5,5,0,1,0,5,5,0,5,1,5,5,0,0,5,5,0,0,5,5,0,5,3,5,0,0,0,0,5,5,5,5,0,0,5,0,3,0,5,5,0,0,5,5,5,5,5,5,5,0,0,5,0,0,2,0,5,0,5,0,2,5,5,0,5,5,0,0,5,5,5,5,0,0,3,1,5,5,5,5,5,0,5,0,0,0,5,4,5,5,0,5,0,5,0,5,0,5,0,5,0,5,5,5,5,5,0,0,0,0,5,0,0,5,5,0,5,0,0,5,5,4,5,5,5,5,0,5,0,5,5,0,5,0,0,0,0,5,5,5,5,5,0,5,5,5,0,0,5,5,0,0,5,0,0,5,5,0,5,5,5,0,5,5,0,4,0,0,5,5,2,0,0,0,5,5,0,5,5,5,0,0,5,0,0,5,5,0,0,0,0,5,5,4,5,5,5,0,5,5,0,5,0,0,0,5,5,5,5,0,5,0,5,5,0,0,0,0,1,4,0,5,5,5,5,5,0,5,0,0,5,0,0,3,5,5,5,0,5,0,5,5,0,0,5,0,0,0,0,5,0,5,5,5,5,0,0,0,0,5,5,0,5,4,0,0,0,5,0,0,5,5,5,0,0,5,5,5,0,5,5,5,0,0,0,0,5,0,0,4,5,0,5,0,5,5,5,0,5,0,5,5,0,0,5,5,0,5,5,0,5,0,5,0,5,5,0,0,5,4,5,0,5,1,5,0,5,0,0,0,0,1,5,0,5,5,0,5,3,5,5,0,0,0,0,5,0,1,0,0,5,5,0,4,0,5,5,5,2,
		</sequence>
		<sequence taxon='3' totalcount='5'>
5,0,0,0,0,0,5,5,0,0,0,5,0,0,5,0,1,5,0,0,5,0,5,0,5,0,5,0,0,0,5,0,5,5,5,0,5,5,0,5,0,0,5,5,0,5,5,0,0,0,0,0,0,0,1,0,5,5,5,0,1,5,5,5,0,2,0,5,0,0,5,5,5,5,4,5,0,0,5,4,5,5,5,0,0,0,5,5,0,5,0,5,1,0,0,5,5,0,0,0,1,5,5,0,0,1,0,5,5,0,5,5,5,5,5,5,5,0,0,5,0,0,0,5,0,5,0,0,5,5,5,0,0,5,0,5,0,5,0,0,0,4,5,0,0,5,0,0,5,5,4,5,5,5,5,5,0,5,1,5,0,5,5,2,5,0,0,1,4,5,0,4,5,0,0,0,0,0,5,0,5,5,5,0,5,4,5,5,5,5,5,0,5,5,4,5,5,3,0,5,0,5,5,5,5,5,5,0,0,5,0,0,5,0,0,5,2,4,1,0,5,0,0,0,5,0,5,0,5,5,0,1,5,5,5,1,0,0,1,1,5,0,5,0,0,5,0,0,5,0,0,5,5,4,5,0,5,5,0,0,0,0,0,5,0,0,5,0,5,0,4,0,5,0,0,5,5,5,0,4,5,5,0,5,2,0,0,5,5,0,0,0,2,0,3,5,5,5,1,0,5,3,5,5,0,5,5,2,0,5,5,0,5,0,0,5,5,3,5,5,3,5,0,5,1,3,0,0,0,0,0,5,5,0,0,5,5,5,5,0,0,5,5,0,5,5,0,5,5,3,0,0,0,5,5,0,0,0,5,0,5,5,5,0,5,0,0,5,5,1,5,0,5,0,5,0,0,0,5,5,5,0,0,0,5,0,0,5,5,0,0,0,0,0,0,0,0,5,0,0,5,0,0,5,5,5,0,5,0,0,0,0,0,0,0,5,0,0,5,5,2,5,5,5,5,0,5,0,0,4,0,5,5,2,5,4,5,0,4,5,0,0,2,5,5,5,0,0,0,0,0,0,5,5,0,0,2,0,5,5,5,3,5,0,5,5,5,0,0,5,5,5,5,0,5,5,0,5,5,5,4,4,5,5,5,5,5,0,0,0,5,0,0,1,0,0,5,0,0,0,0,5,5,0,0,0,5,0,5,4,0,5,0,5,5,5,0,5,5,5,1,0,0,5,4,5,5,5,5,0,2,5,5,5,5,0,1,5,5,5,5,5,5,0,5,0,5,3,5,0,5,0,0,0,1,0,0,5,5,0,0,5,5,5,5,5,5,0,5,5,0,5,5,0,0,5,0,5,5,5,0,5,5,0,5,0,5,5,0,0,0,5,5,0,0,0,5,1,5,1,5,5,0,5,5,5,5,2,0,0,5,5,0,0,0,4,0,1,0,5,0,5,5,5,5,0,0,5,5,4,1,0,5,5,0,5,5,0,0,5,0,4,5,0,0,1,4,3,0,5,0,5,5,0,1,4,5,0,0,5,5,0,5,0,5,0,0,0,0,5,5,5,5,0,0,5,0,3,0,5,5,0,0,3,5,5,0,5,4,5,0,0,1,0,0,0,0,3,1,5,0,5,5,0,0,5,5,0,0,5,5,5,5,2,0,3,0,5,5,5,5,5,0,5,0,0,0,5,5,5,5,0,5,0,5,0,5,0,4,0,5,0,5,5,5,5,5,0,0,0,1,5,0,1,5,5,0,5,0,0,5,5,0,5,5,5,5,0,5,0,5,5,0,1,0,0,0,0,5,5,5,5,5,0,4,5,5,0,0,5,5,0,0,4,0,0,5,4,2,5,4,4,0,5,5,0,0,0,0,5,3,0,0,0,0,2,4,0,5,5,5,0,0,5,0,0,5,5,0,0,0,0,5,5,5,5,5,5,0,5,5,0,5,0,0,1,5,5,5,5,0,5,0,5,5,0,0,0,0,0,5,0,5,5,4,5,5,0,5,0,0,5,0,0,5,5,5,5,0,5,0,5,5,0,2,5,0,1,0,0,5,1,5,5,5,5,0,0,0,0,5,5,0,5,0,0,0,0,3,0,0,5,5,5,0,0,5,5,5,1,5,5,5,1,0,0,0,5,0,1,0,5,0,5,0,5,5,5,0,5,2,4,5,0,0,5,5,0,5,5,0,5,0,5,0,5,5,0,0,5,5,5,0,5,0,4,0,4,0,3,0,0,0,5,0,5,5,0,5,5,5,5,0,0,0,1,5,0,0,0,0,5,5,0,5,0,5,5,5,5,
		</sequence>
	</data>



<run id='mcmc' spec='snap.MCMC' chainLength='100000' preBurnin='0' stateBurnin='100000'>
        <state>
          <stateNode spec='GammaParameter' id='gamma' initFromTree='false' pattern='gamma' value='10'>
            <tree idref='tree'/>
          </stateNode>

          <parameter name='stateNode' id='v' value='1' lower='0.0'/>
          <parameter name='stateNode' id='u' value='1' lower='0.0'/>
          <parameter name='stateNode' id='alpha'  value='2' lower='0.0'/>
          <parameter name='stateNode' id='beta'   value='200' lower='0.0'/>
          <parameter name='stateNode' id='lambda' value='10' lower='0.0'/>

          <tree name='stateNode' spec='ClusterTree' id='tree' nodetype='snap.NodeData' clusterType='upgma'>
               <input name='taxa' idref='alignment'/>
          </tree>
        </state>

        <distribution id='posterior' spec='beast.core.util.CompoundDistribution'>
 	          <snapprior name='distribution' id='prior'>
	              <input name='alpha' idref='alpha'/>
    		      <input name='beta' idref='beta'/>
	    	      <input name='lambda' idref='lambda'/>
	              <input name='gamma' idref='gamma'/>
		          <input name='tree' idref='tree'/>
            </snapprior>
            <snaptreelikelihood name='distribution' id='treeLikelihood'>
                <input name='data' idref='alignment'/>
                <input name='tree' idref='tree'/>
                <input name='mutationRateU' idref='u'/>
                <input name='mutationRateV' idref='v'/>
	              <input name='gamma' idref='gamma'/>
            </snaptreelikelihood>
        </distribution>

        <stateDistribution idref='prior'/>

    	<operator spec='operators.NodeSwapper' weight='0.5'>
	        <tree name='tree' idref='tree'/>
    	</operator>
        <operator spec='operators.NodeBudger' weight='0.5' size='0.5'>
            <tree name='tree' idref='tree'/>
        </operator>
	    <operator spec='beast.evolution.operators.ScaleOperator' scaleFactor='0.25' weight='0.5'>
	        <tree name='tree' idref='tree'/>
    	</operator>
        <operator spec='operators.GammaMover' pGammaMove='0.5' weight='8'>
	        <parameter name='gamma' idref='gamma'/>
        </operator>
        <operator spec='operators.RateMixer' scaleFactors='0.25' weight='1'>
	        <tree name='tree' idref='tree'/>
	        <parameter name='gamma' idref='gamma'/>
        </operator>

        <log logEvery='100'>
	    	<model idref='posterior'/>
            <parameter name='log' idref='u'/>
            <parameter name='log' idref='v'/>
            <distribution name='log' idref='prior'/>
            <distribution name='log' idref='treeLikelihood'/>
            <distribution name='log' idref='posterior'/>
	    	<parameter name='log' idref='gamma'/>
	    	<log spec='snap.ThetaLogger'>
				<gamma idref='gamma'/>
	    	</log>
	    	<log spec='beast.evolution.tree.TreeHeightLogger'>
				<tree idref='tree'/>
	    	</log>
        </log>
        <log logEvery='100' fileName='test.$(seed).log'>
	    	<model idref='posterior'/>
            <parameter name='log' idref='u'/>
            <parameter name='log' idref='v'/>
            <distribution name='log' idref='prior'/>
            <distribution name='log' idref='treeLikelihood'/>
            <distribution name='log' idref='posterior'/>
	    	<parameter name='log' idref='gamma'/>
	    	<log spec='snap.ThetaLogger'>
				<gamma idref='gamma'/>
	    	</log>
	    	<log spec='beast.evolution.tree.TreeHeightLogger'>
				<tree idref='tree'/>
	    	</log>
        </log>
        <log logEvery='100' fileName='test.$(seed).trees'>
            <tree name='log' idref='tree'/>
        </log>
</run>


</snap>
