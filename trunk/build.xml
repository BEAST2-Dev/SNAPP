<!-- Build SnAP. It is also used by Hudson SnAP project. JUnit test is available for this build. -->
<project basedir="." default="build_all_SnAP" name="BUILD_SnAP">
	<description>
	    Build SnAP. 
            Also used by Hudson SnAP project. 
	    JUnit test is available for this build.
	    $Id: build_SnAP.xml $
	</description>

	<!-- set global properties for this build -->
	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="lib" location="lib" />
	<property name="dist" location="dist" />

	<property name="main_class_SnAP" value="snap.app.mcmc.SNAPPMCMC" />
	<property name="main_class_TSA" value="snap.app.analysis.TreeSetAnalyser" />
	<property name="report"  value="${build}/junitreport"/>

	<path id="classpath">
		<fileset dir="${lib}" includes="**/*.jar"/>
	</path>

	<!-- start -->
	<target name="init">
		<echo message="${ant.project.name}: ${ant.file}" />
	</target>


	<target name="clean">
		<delete dir="${build}" />
	</target>

	<!-- clean previous build, and then compile Java source code, and Juint test -->
	<target name="build_all_SnAP" depends="clean,compile-all,dist_all_SnAP"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- clean previous build, compile Java source code, and Junit test, and make the snap.jar -->
	<target name="test" depends="clean,compile-all,junit,dist_all_SnAP"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- No JUnit Test, clean previous build, compile Java source code, and make the snap.jar -->
	<target name="build_jar_all_SnAP_NoJUnitTest" depends="clean,compile-all,dist_all_SnAP,doc"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- compile Java source code -->
	<target name="compile-all" depends="init">
		<mkdir dir="${build}" />

		<!-- Compile the java code from ${src} into ${build} /bin -->
		<javac srcdir="${src}" destdir="${build}" classpathref="classpath" 
		       fork="true"
		       memoryinitialsize="256m"
		       memorymaximumsize="256m">
			<include name="snap/**/**" />
			<include name="beast/**/**" />
			<!-- compile JUnit test classes -->
			<include name="test/snap/**" />
		</javac>
        <copy todir="${build}">
            <fileset dir="${src}" includes="**/*.properties"/>
            <fileset dir="${src}" includes="**/*.png"/>
        </copy>
		<echo message="Successfully compiled." />
	</target>

	<!-- make the snap.jar and beauti.jar -->
	<target name="dist_all_SnAP" depends="compile-all" description="create SnAP jar">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}" />

		<!-- Put everything in ${build} into the snap.jar file -->
		<jar jarfile="${dist}/snap.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="${main_class_SnAP}" />
			</manifest>
			<zipgroupfileset dir="${lib}" includes="mtj.jar" />
			<zipgroupfileset dir="${lib}" includes="beast.jar" />
			<fileset dir="${build}">
				<include name="snap/**/*.class" />
				<include name="snap/**/*.png" />
				<include name="beast/**/*.class" />
				<include name="**/*.properties" />
			</fileset>
		</jar>
		<jar jarfile="${dist}/snap.addon.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="${main_class_SnAP}" />
			</manifest>
			<fileset dir="${build}">
				<include name="snap/**/*.class" />
				<include name="snap/**/*.png" />
				<include name="beast/**/*.class" />
				<include name="**/*.properties" />
			</fileset>
		</jar>
		<jar jarfile="${dist}/snap.src.jar">
			<fileset dir="${src}">
				<include name="snap/**/*.java" />
				<include name="**/*.properties" />
				<include name="snap/**/*.png" />
				<include name="snap/**/*.xsl" />
			</fileset>
        </jar>
	</target>

	<!-- run snap.jar -->
	<target name="run_SnAP">
		<java jar="${dist}/snap.jar" fork="true" />
	</target>

	
	<!-- JUnit test -->
	<target name="junit">
		<mkdir dir="${report}" />
		<junit printsummary="yes">
			<classpath>
				<path refid="classpath" />
				<path location="${build}" />
			</classpath>

			<formatter type="xml" />

			<batchtest fork="yes" todir="${report}">
				<fileset dir="${src}">
                    <include name="test/**/*Test.java"/>                                         
				</fileset>
			</batchtest>
		</junit>
		<echo message="JUnit test finished." />
	</target>
    
    <target name="junitreport">
		<junitreport todir="${report}">
			<fileset dir="${report}" includes="*.xml"/>
			<report format="frames" todir="${report}"/>
		</junitreport>
		<echo message="JUnit test report finished." />
	</target>
	
	
    <target name="doc">
        <exec executable="pdflatex" dir="${basedir}/doc">
                <arg value="SNAPP.tex" />
        </exec>
        <exec executable="pdflatex" dir="${basedir}/doc">
                <arg value="SNAPP.tex" />
        </exec>
        <copy file="doc/SNAPP.pdf" tofile="release/common/doc/SNAPP.pdf" />
    </target>

	
	
	<!-- Release -->
	<property name="version" value="1.0.a" />
	<property name="version_number" value="1.0.0" />
	<property name="release_dir" value="release" />
	<property name="copyright" value="SNAPP development team 2011" />

	<property name="SNAPP_name" value="SNAPP" />
	<property name="BEAUti_name" value="BEAUti" />
	<property name="TSA_name" value="TreeSetAnalyser" />

	<property name="common_dir" value="${release_dir}/common" />
	<property name="Mac_dir" value="${release_dir}/Mac" />
	<property name="Linux_dir" value="${release_dir}/Linux" />
	<property name="Windows_dir" value="${release_dir}/Windows" />
	<property name="tools_dir" value="${common_dir}/tools" />

	<property name="Mac_package_dir" value="${Mac_dir}/${SNAPP_name}" />
	<property name="Linux_package_dir" value="${Linux_dir}/${SNAPP_name}" />
	<property name="Add_on_dir" value="${release_dir}/add-on" />
	<property name="Windows_package_dir" value="${Windows_dir}/${SNAPP_name}" />

	<!-- Need to either install Launch4j under {BEAST workspace}/${release}
                 or install it in the default directory and change the location of launch4j.dir -->
	<target name="windows"
	        depends="build_jar_all_SnAP_NoJUnitTest"
	        description="release Windows version of SNAPP, BEAUTI, DensiTree, TreeSetAnalyser">

		<delete dir="${Windows_package_dir}" />
		<!-- Create the release directory -->
		<mkdir dir="${Windows_package_dir}" />

		<property name="launch4j.dir" location="${Windows_dir}/launch4j" />
		<taskdef name="launch4j"
		         classname="net.sf.launch4j.ant.Launch4jTask"
		         classpath="${launch4j.dir}/launch4j.jar :${launch4j.dir}/lib/xstream.jar" />

		<copy todir="${Windows_package_dir}/doc">
			<fileset dir="${common_dir}/doc" />
		</copy>
		<copy todir="${Windows_package_dir}/examples/">
			<fileset dir="examples/">
				<include name="*.xml" />
				<include name="nexus/**" />
				<exclude name="benchmark/**" />
			</fileset>
		</copy>
		<copy file="${dist}/snap" todir="${Windows_package_dir}/lib" />
		<copy file="${dist}/snap.src.jar" todir="${Windows_package_dir}/lib" />
		<copy file="${common_dir}/VERSION HISTORY.txt" todir="${Windows_package_dir}" />
		<copy file="${common_dir}/README.txt" todir="${Windows_package_dir}" />

		<!-- BEAUTi v?.?.?.exe -->
		<launch4j configFile="${Windows_dir}/BEAUti_launch4j.xml"
		          jar="${dist}/snap"
		          outfile="${Windows_package_dir}/${BEAUti_name}.exe"
		          fileVersion="${version_number}.0"
		          txtFileVersion="${version}"
		          productVersion="${version_number}.0"
		          txtProductVersion="${version}" />

		<!-- SNAPP v?.?.?.exe -->
		<launch4j configFile="${Windows_dir}/SNAPP_launch4j.xml"
		          jar="${dist}/snap.jar"
		          outfile="${Windows_package_dir}/${SNAPP_name}.exe"
		          fileVersion="${version_number}.0"
		          txtFileVersion="${version}"
		          productVersion="${version_number}.0"
		          txtProductVersion="${version}" />

		<launch4j configFile="${Windows_dir}/TSA_launch4j.xml"
		          jar="${dist}/snap.jar"
		          outfile="${Windows_package_dir}/${TSA_name}.exe"
		          fileVersion="${version_number}.0"
		          txtFileVersion="${version}"
		          productVersion="${version_number}.0"
		          txtProductVersion="${version}" />

		<launch4j configFile="${tools_dir}/DensiTree_launch4j.xml"
		          jar="${tools_dir}/DensiTree.jar"
		          outfile="${Windows_package_dir}/DensiTree.exe"
		          fileVersion="2.0.0.0"
		          txtFileVersion="2.0.0.0"
		          productVersion="2.0.0.0"
		          txtProductVersion="2.0.0.0" />

		<launch4j configFile="${tools_dir}/DensiTreeS_launch4j.xml"
		          jar="${tools_dir}/DensiTreeS.jar"
		          outfile="${Windows_package_dir}/DensiTreeS.exe"
		          fileVersion="2.0.0.0"
		          txtFileVersion="2.0.0.0"
		          productVersion="2.0.0.0"
		          txtProductVersion="2.0.0.0" />

		<copy todir="${Windows_package_dir}/templates/">
			<fileset dir="templates/" />
		</copy>

		<zip destfile="${Windows_dir}/${SNAPP_name} v${version}.zip">
			<zipfileset dir="${Windows_package_dir}" prefix="${SNAPP_name}" />
		</zip>

		<echo message="Windows version release is finished." />
	</target>

	<target name="linux"
	        depends="build_jar_all_SnAP_NoJUnitTest"
	        description="release Linux/Unix version of SNAPP, BEAUTI, TreeSetAnalyser, DensiTree">
		<delete dir="${Linux_package_dir}" />
		<!-- Create the release directory -->
		<mkdir dir="${Linux_package_dir}" />

		<copy todir="${Linux_package_dir}/bin">
			<fileset dir="${Linux_dir}/bin" />
		</copy>
		<chmod dir="${Linux_package_dir}/bin" perm="755" includes="**/**" />
		<copy todir="${Linux_package_dir}/doc">
			<fileset dir="${common_dir}/doc" />
		</copy>
		<copy todir="${Linux_package_dir}/examples/">
			<fileset dir="examples/">
				<include name="*.xml" />
				<include name="nexus/**" />
				<exclude name="benchmark/**" />
			</fileset>
		</copy>

		<copy file="${common_dir}/icons/snapp.png" todir="${Linux_package_dir}/images" />
		<copy file="${common_dir}/icons/beauti.png" todir="${Linux_package_dir}/images" />
		<copy file="${dist}/snap.jar" todir="${Linux_package_dir}/lib" />
		<copy file="${dist}/snap.src.jar" todir="${Linux_package_dir}/lib" />

		<copy file="${tools_dir}/DensiTree.jar" todir="${Linux_package_dir}/lib" />
		<copy file="${tools_dir}/DensiTree.png" todir="${Linux_package_dir}/images" />

		<copy todir="${Linux_package_dir}/templates/">
			<fileset dir="templates/" />
		</copy>
		<copy file="${common_dir}/VERSION HISTORY.txt" todir="${Linux_package_dir}" />
		<copy file="${common_dir}/README.txt" todir="${Linux_package_dir}" />

		<!-- Only works under Unix or NonStop Kernel (Tandem) -->
		<!-- <chmod dir="${Linux_package_dir}/bin" perm="755" includes="**/**"/-->
		<!-- [ANT Bug 550] the tar task change the mode of the executables files, have to tar manaully -->
		<echo message="Have to tar manaully, because [ANT Bug 550] the tar task change the mode of the executables files." />
		<echo message="Linux/Unix version release is finished." />
	</target>

	<property name="jarbundler_dir" value="/Applications/eclipse/plugins/org.apache.ant_1.8.2.v20110505-1300/lib" />
	<target name="mac"
	        depends="build_jar_all_SnAP_NoJUnitTest"
	        description="release Mac version of SNAPP, BEAUTI, TreeSetAnalyser, DensiTree">
		<delete dir="${Mac_package_dir}" />
		<!-- Create the release directory -->
		<mkdir dir="${Mac_package_dir}" />

		<copy todir="${Mac_package_dir}/bin">
			<fileset dir="${Linux_dir}/bin" />
		</copy>
		<chmod dir="${Mac_package_dir}/bin" perm="755" includes="**/**" />

		<copy todir="${Mac_package_dir}/doc">
			<fileset dir="${common_dir}/doc" />
		</copy>
		<copy todir="${Mac_package_dir}/examples/">
			<fileset dir="examples/">
				<include name="*.xml" />
				<include name="nexus/**" />
				<exclude name="benchmark/**" />
			</fileset>
		</copy>
		<!-- <copy todir="${Mac_package_dir}/native">
			<fileset dir="${common_dir}/native" />
		</copy>

		<copy file="${dist}/beauti.jar" todir="${Mac_package_dir}/lib" /> -->
		<copy file="${dist}/snap.jar" todir="${Mac_package_dir}/lib" />
		<copy file="${dist}/snap.src.jar" todir="${Mac_package_dir}/lib" />

		<copy file="${common_dir}/VERSION HISTORY.txt" todir="${Mac_package_dir}" />
		<copy file="${common_dir}/README.txt" todir="${Mac_package_dir}" />

		<taskdef name="jarbundler"
		         classname="net.sourceforge.jarbundler.JarBundler"
		         classpath="${jarbundler_dir}/jarbundler-2.2.0.jar" />

		<!-- create a jar bundle for the mac -->
		<jarbundler dir="${Mac_package_dir}"
		            name="${SNAPP_name}"
		            mainclass="${main_class_SnAP}"
		            icon="${common_dir}/icons/snapp.icns"
		            jvmversion="1.6+"
		            vmoptions="-Xmx1024M"
		            arguments="-window -working -options"
		            version="${version}"
		            infostring="${SNAPP_name}, ${copyright}"
		            bundleid="${main_class_SnAP}">
			<jarfileset dir="${Mac_package_dir}/lib">
				<include name="**/snap.jar" />
				<!-- <include name="**/beast-beagle.jar" /> -->
			</jarfileset>
			<!-- 			<jarfileset dir="${Mac_package_dir}/lib">
				<include name="libNucleotideLikelihoodCore.jnilib" />
			</jarfileset> -->
			<javaproperty name="apple.laf.useScreenMenuBar" value="true" />
			<javaproperty name="java.library.path" value="$JAVAROOT:/usr/local/lib" />
		</jarbundler>

		<jarbundler dir="${Mac_package_dir}"
		            name="${TSA_name}"
		            mainclass="${main_class_TSA}"
		            icon="${common_dir}/icons/tsa.icns"
		            jvmversion="1.6+"
		            vmoptions="-Xmx1024M"
		            arguments="-window -working -options"
		            version="${version}"
		            infostring="${TSA_name}, ${copyright}"
		            bundleid="${main_class_TSA}">
			<jarfileset dir="${Mac_package_dir}/lib">
				<include name="**/snap.jar" />
			</jarfileset>
			<javaproperty name="apple.laf.useScreenMenuBar" value="true" />
			<javaproperty name="java.library.path" value="$JAVAROOT:/usr/local/lib" />
		</jarbundler>

		<jarbundler dir="${Mac_package_dir}"
		            name="${BEAUti_name}"
		            mainclass="beast.app.beauti.Beauti"
		            icon="${common_dir}/icons/beauti.icns"
		            jvmversion="1.6+"
		            vmoptions="-Xmx1024M"
		            arguments="-template templates/snap.xml"
		            version="${version}"
		            infostring="${BEAUti_name}, ${copyright}"
		            bundleid="beast.app.beauti.Beauti">
			<jarfileset dir="${Mac_package_dir}/lib">
				<include name="**/snap.jar" />
			</jarfileset>
			<javaproperty name="apple.laf.useScreenMenuBar" value="true" />
			<javaproperty name="java.library.path" value="$JAVAROOT" />
		</jarbundler>

		<!-- ant copy will not redirect the source, so that have to re-bundler it -->
		<jarbundler dir="${Mac_package_dir}"
		            name="DensiTree"
		            mainclass="viz.DensiTree"
		            icon="${tools_dir}/DensiTree.icns"
		            jvmversion="1.6+"
		            vmoptions="-Xmx1024M"
		            arguments=""
		            version="2.0"
		            infostring="DensiTree, http://compevol.auckland.ac.nz/software/DensiTree/"
		            bundleid="viz.DensiTree">
			<jarfileset dir="${tools_dir}">
				<include name="**/DensiTree.jar" />
			</jarfileset>
			<javaproperty name="apple.laf.useScreenMenuBar" value="true" />
			<javaproperty name="java.library.path" value="$JAVAROOT/lib" />
		</jarbundler>

		<jarbundler dir="${Mac_package_dir}"
		            name="DensiTreeS"
		            mainclass="viz.DensiTreeS"

		            icon="${tools_dir}/DensiTreeS.icns"
		            jvmversion="1.6+"
		            vmoptions="-Xmx1024M"
		            arguments=""
		            version="2.0"
		            infostring="DensiTreeS, http://compevol.auckland.ac.nz/software/DensiTree/"
		            bundleid="viz.DensiTreeS">
			<jarfileset dir="${tools_dir}">
				<include name="**/DensiTreeS.jar" />
			</jarfileset>
			<javaproperty name="apple.laf.useScreenMenuBar" value="true" />
			<javaproperty name="java.library.path" value="$JAVAROOT/lib" />
		</jarbundler>


		<copy todir="${Mac_package_dir}/templates/">
			<fileset dir="templates/" />
		</copy>

		<echo message="Building disk image." />

		<!-- create disk image -->
		<exec executable="/usr/bin/hdiutil">
			<arg value="create" />
			<arg value="-ov" />
			<arg value="-srcfolder" />
			<arg value="${Mac_package_dir}" />
			<arg value="-volname" />
			<arg value="${SNAPP_name}" />
			<arg value="-imagekey" />
			<arg value="zlib-level=6" />
			<arg value="${Mac_dir}/${SNAPP_name} v${version}.dmg" />
		</exec>

		<echo message="Mac version release is finished." />
	</target>
	
<!--
-->
	<target name="addon"
	        depends="build_jar_all_SnAP_NoJUnitTest"
	        description="release BEAST 2 add-on version of SNAPP">

		<delete dir="${Add_on_dir}" />
		<!-- Create the release directory -->
		<mkdir dir="${Add_on_dir}" />
		<mkdir dir="${Add_on_dir}/lib" />
		<mkdir dir="${Add_on_dir}/templates" />

		<copy todir="${Add_on_dir}/lib">
			<fileset dir="${dist}" includes="snap.*.jar" />
		</copy>
		<copy todir="${Add_on_dir}/templates">
			<fileset dir="templates/" />
		</copy>

		<jar jarfile="${dist}/SNAPP.addon.zip">
			<fileset dir="${Add_on_dir}">
				<include name="**/*" />
			</fileset>
        </jar>
		<echo message="Add-on version release is finished." />
	</target>


</project>
